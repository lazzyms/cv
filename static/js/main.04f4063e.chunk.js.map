{"version":3,"sources":["components/Header.jsx","components/Summary.jsx","components/Skills.jsx","components/Projects.jsx","components/Experience.jsx","components/Education.jsx","components/Social.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","useState","copied","setCopied","Row","className","Col","md","sm","Image","src","personal","photo","roundedCircle","style","textShadow","name","Button","variant","href","email","blog","phone","github","skype","linkedIn","stackoverflow","onClick","bondUrl","window","location","console","log","navigator","share","title","url","then","catch","error","clipboard","writeText","Summary","Card","Body","Text","data","Skills","ListGroup","Item","primary","map","x","i","key","familiar","Projects","Experience","jobs","Title","company","startedAt","endedAt","work","y","Education","edu","degree","batch","institute","grades","Social","size","links","instagram","facebook","twitter","medium","reddit","App","resume","setResume","useEffect","local","Fragment","Container","summary","skills","projects","experience","education","Spinner","animation","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.04f4063e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\nimport {\n  FaEnvelope,\n  FaBloggerB,\n  FaPhoneAlt,\n  FaGithub,\n  FaSkype,\n  FaLinkedin,\n} from \"react-icons/fa\";\nimport { FiShare } from \"react-icons/fi\";\nimport { DiStackoverflow } from \"react-icons/di\";\n\nfunction Header(props) {\n  const [copied, setCopied] = useState(false);\n  let shareProfile = () => {\n    let bondUrl = window.location.href;\n    console.log(bondUrl);\n    if (navigator.share) {\n      navigator\n        .share({\n          title: \"Portfolio | M\",\n          url: bondUrl,\n        })\n        .then(() => {\n          console.log(\"Thanks for sharing!\");\n        })\n        .catch(console.error);\n    } else {\n      navigator.clipboard.writeText(bondUrl);\n      setCopied(true);\n    }\n  };\n  return (\n    <Row className=\"justify-content-center align-items-center\">\n      <Col md=\"12\" sm=\"12\" className=\"mb-3 text-center\">\n        <Image src={props.personal.photo} roundedCircle className=\"shadow\" />\n      </Col>\n      <Col md=\"12\" sm=\"12\">\n        <h1 className=\"text-light text-uppercase text-center font-weight-bold display-3\" style={{  textShadow: '4px 4px #5d5d5d'}}>\n          {props.personal.name}{\" \"}\n          \n        </h1>\n        <Row className=\"justify-content-center\">\n          <Button variant=\"light\" href={\"mailto:\" + props.personal.email}>\n            <FaEnvelope />\n          </Button>\n          <Button variant=\"light\" href={props.personal.blog}>\n            <FaBloggerB />\n          </Button>\n          <Button variant=\"light\" href={\"tel:\" + props.personal.phone}>\n            <FaPhoneAlt />\n          </Button>\n          <Button variant=\"light\" href={props.personal.github}>\n            <FaGithub />\n          </Button>\n          <Button variant=\"light\" href={props.personal.skype}>\n            <FaSkype />\n          </Button>\n          <Button variant=\"light\" href={props.personal.linkedIn}>\n            <FaLinkedin />\n          </Button>\n          <Button variant=\"light\" href={props.personal.stackoverflow}>\n            <DiStackoverflow />\n          </Button>\n          <Button variant=\"outline-light\" onClick={shareProfile}>\n            <FiShare /> {copied ? 'Link Copied' : 'Share Profile Link'}\n          </Button>\n        </Row>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\n\nfunction Summary(props) {\n  return (\n    <Row className=\"justify-content-center mt-5 align-items-center\">\n      <Col>\n        <Card className=\"card-shadow border-0 bg-dark text-light\">\n          <Card.Header>Summary</Card.Header>\n          <Card.Body>\n            <Card.Text>{props.data}</Card.Text>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Summary;\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nfunction Skills(props) {\n  return (\n    <Row className=\"justify-content-center mt-5 align-items-center\">\n      <Col>\n        <Card className=\"card-shadow border-0\">\n          <Card.Header>Skills</Card.Header>\n          <Card.Body>\n            <Row>\n              <Col md=\"6\">\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item variant=\"secondary\">Primary</ListGroup.Item>\n                  {props.primary.map((x, i) => (\n                    <ListGroup.Item key={i}>{x}</ListGroup.Item>\n                  ))}\n                </ListGroup>\n              </Col>\n              <Col md=\"6\">\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item variant=\"secondary\">\n                    Familiar with\n                  </ListGroup.Item>\n                  {props.familiar.map((x, i) => (\n                    <ListGroup.Item key={i}>{x}</ListGroup.Item>\n                  ))}\n                </ListGroup>\n              </Col>\n            </Row>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Skills;\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport { FaExternalLinkAlt } from \"react-icons/fa\";\nfunction Projects() {\n  return (\n    <Row className=\"justify-content-center mt-5 align-items-center\">\n      <Col>\n        <Card className=\"card-shadow border-0 bg-dark text-light text-center\">\n          <Card.Header>\n            <a href=\"https://github.com/lazzyms/cv/wiki/Projects\">\n              Projects <FaExternalLinkAlt />\n            </a>\n          </Card.Header>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Projects;\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nfunction Experience(props) {\n  return (\n    <Row className=\"justify-content-center mt-5 align-items-center\">\n      <Col>\n        <Card className=\"card-shadow border-0\">\n          <Card.Header>Work Experience</Card.Header>\n          <Card.Body className=\"mx-3\">\n            {props.jobs.map((x, i) => (\n              <div className=\"my-3\" key={i}>\n                <Card.Title className=\"font-weight-bold\">\n                  {x.company + \" - \" + x.location}\n                </Card.Title>\n                <Card.Text>\n                  ({x.startedAt + \" - \" + (x.endedAt ? x.endedAt : \"Current\")})\n                </Card.Text>\n                <ListGroup variant=\"flush\">\n                  {x.work.map((y, i) => (\n                    <ListGroup.Item key={i}>{y}</ListGroup.Item>\n                  ))}\n                </ListGroup>\n              </div>\n            ))}\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Experience;\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\n\nfunction Education(props) {\n  return (\n    <Row className=\"justify-content-center mt-5 align-items-center\">\n      <Col>\n        <Card className=\"card-shadow border-0 bg-dark text-light\">\n          <Card.Header>Education</Card.Header>\n          <Card.Body>\n            {props.edu.map((x,i) => (\n              <div key={i}>\n                <Card.Title className=\"font-weight-bold\">\n                  {x.degree} <label>({x.batch})</label>\n                </Card.Title>\n                <Card.Text>{x.institute}</Card.Text>\n                <Card.Text>{x.grades}</Card.Text>\n              </div>\n            ))}\n            <Card.Text>{props.data}</Card.Text>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Education;\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport {\n  FaInstagram,\n  FaFacebook,\n  FaTwitter,\n  FaMedium,\n  FaReddit,\n} from \"react-icons/fa\";\n\nfunction Social(props) {\n  return (\n    <Row className=\"justify-content-center mt-5 align-items-center\">\n      <Col>\n        <Card className=\"card-shadow border-0 bg-dark text-light\">\n          <Card.Body className=\"mx-3 text-center\">\n            <Button variant=\"dark\" size=\"lg\" href={props.links.instagram}>\n              <FaInstagram />\n            </Button>\n            <Button variant=\"dark\" size=\"lg\" href={props.links.facebook}>\n              <FaFacebook />\n            </Button>\n            <Button variant=\"dark\" size=\"lg\" href={props.links.twitter}>\n              <FaTwitter />\n            </Button>\n            <Button variant=\"dark\" size=\"lg\" href={props.links.medium}>\n              <FaMedium />\n            </Button>\n            <Button variant=\"dark\" size=\"lg\" href={props.links.reddit}>\n              <FaReddit />\n            </Button>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Social;\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Spinner from 'react-bootstrap/Spinner'\nimport { Header, Summary, Skills, Projects, Experience, Education, Social } from './components'\nimport local from './resume.json'\nfunction App() {\n  const [resume, setResume] = useState()\n\n  useEffect(() => {\n    setResume(local)\n  }, [])\n  return (\n    <React.Fragment>\n      <Container>\n        <Row className=\"justify-content-center my-5\">\n          {!resume ? <Spinner animation=\"border\" /> :\n            <Col>\n              <Header personal={resume.personal} />\n              <Summary data={resume.summary} />\n              <Skills primary={resume.skills.primary} familiar={resume.skills.familiar} />\n              <Projects projects={resume.projects} />\n              <Experience jobs={resume.experience} />\n              <Education edu={resume.education} />\n              <Social links={resume.personal} />\n            </Col>\n          }\n        </Row>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}